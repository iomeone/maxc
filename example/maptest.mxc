fn map(f: fn(int)->int, lst: int[], len: int, idx: int) -> int[] {
    if(len == idx) return lst;
    else {
        lst[idx] = f(lst[idx]);
        return map(f, lst, len, idx + 1);
    }
}

fn square(n: int) -> int {
    return n * n;
}

fn cube(n: int) -> int {
    return n * n * n;
}

let lst: int[] = [0, 1, 2, 3, 4, 5];
let len: int = 6;

println(map(cube, lst, len, 0));
println(map(square, lst, len, 0));
