fn pow(base: float, exp: int): float {
    let ret: float = 1.0;

    while(exp > 0) {
        ret = ret * base;

        exp = exp - 1;
    }

    ret;
}

fn leibniz(n: int): float {
    let i: int = 0;
    let ret: float = 0.0;
    let const__1: float = 0.0 - 1.0;

    while(i < n) {
        ret = ret + pow(const__1, i) / (2.0 * i.tofloat() + 1.0);

        ++i;
    }

    4.0 * ret;
}

println(10000.leibniz());
