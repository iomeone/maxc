fn mandelbrot(cx: float, cy: float, n: int): int {
    let xn: float = 0;
    let yn: float = 0;
    let xn_1: float = 0.0;
    let yn_1: float = 0.0;

    let i: int = 0;

    while(i < n) {
        xn_1 = xn * xn - (yn * yn) + cx;
        yn_1 = 2.0 * xn * yn + cy;

        let t: float = xn_1 * xn_1 + yn_1 * yn_1;
        if(t > 4) {
            return t;
        }
        else {
            xn = xn_1;
            yn = yn_1;
        }

        ++i;
    }

    return 0;
}

let x_max: float = 2.0;
let x_min: float = 0.0 - 2.0;
let y_max: float = 1.0;
let y_min: float = 0.0 - 1.0;
let dx: float = 0.03;
let dy: float = 0.045;

let y: float = y_max; let x: float = x_min;

while(y > y_min) {
    while(x < x_max) {
       let t: int = mandelbrot(x, y, 300);

       if(t > 8) {
           print("#");
       }
       else if(t > 6) {
           print("*");
       }
       else if(t > 4) {
           print(".");
       }
       else {
           print(" ");
       }
       x = x + dx;
    }
    y = y - dy;

    println("");
}
